#ifndef FLOOR_H
#define FLOOR_H

#include "tile.h"
#include <vector>
#include <memory>
#include <string>

class Floor {
    static const int HEIGHT = 25;
    static const int WIDTH = 79;
    string layout = "|-----------------------------------------------------------------------------||                                                                             || |--------------------------|        |-----------------------|               || |..........................|        |.......................|               || |..........................+########+.......................|-------|       || |..........................|   #    |...............................|--|    || |..........................|   #    |..................................|--| || |----------+---------------|   #    |----+----------------|...............| ||            #                 #############                |...............| ||            #                 #     |-----+------|         |...............| ||            #                 #     |............|         |...............| ||            ###################     |............|   ######+...............| ||            #                 #     |............|   #     |...............| ||            #                 #     |-----+------|   #     |--------+------| ||  |---------+-----------|     #           #          #              #        ||  |.....................|     #           #          #         |----+------| ||  |.....................|     ########################         |...........| ||  |.....................|     #           #                    |...........| ||  |.....................|     #    |------+--------------------|...........| ||  |.....................|     #    |.......................................| ||  |.....................+##########+.......................................| ||  |.....................|          |.......................................| ||  |---------------------|          |---------------------------------------| ||                                                                             ||-----------------------------------------------------------------------------|";

    // chamber coordinate bounds (by row):
    // chamber topleft: 
    // (3, 3) -> (28, 3)
    // (3, 4) -> (28, 4)
    // (3, 5) -> (28, 5)
    // (3, 6) -> (28, 6)

    // chamber topright:
    // ...
    
    vector<vector<shared_ptr<Tile>>> tiles;


public:

    Floor() {

        int index = 0;
        for (int r = 0; r < HEIGHT; ++r) {
            vector<shared_ptr<Tile>> row;
            for (int c = 0; c < WIDTH; ++c) {
                char chr = layout[index++];
                Tile::Type type;

                switch (chr) {
                    case ' ': type = Tile::WS; break;
                    case '|': type = Tile::VWALL; break;
                    case '-': type = Tile::HWALL; break;
                    case '#': type = Tile::PASSAGE; break;
                    case '+': type = Tile::DOOR; break;
                    case '.': type = Tile::EMPTY; break;
                    default: type = Tile::WS; 
                }
                
                row.push_back(make_shared<Tile>(type, c, r));
            }

            tiles.push_back(row);
        }
    }

    vector<vector<shared_ptr<Tile>>> getTiles() {
        return tiles;
    }

    shared_ptr<Tile> getTile(int x, int y) {
        return tiles.at(y).at(x);
    }
};

#endif